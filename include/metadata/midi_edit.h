#ifndef METADATA_MIDI_EDIT_H_
#define METADATA_MIDI_EDIT_H_

namespace lsp
{
	struct midi_edit_base_metadata
	{
		/* 0-127 used internally */
		static const float PROGRAM_MIN   = 1.0f;
		static const float PROGRAM_MAX   = 128.0f;
		static const float PROGRAM_DFL   = 1.0f;
		static const float PROGRAM_STEP  = 1.0f;

		static const float VELOCITY_MIN  = 0.0f;
		static const float VELOCITY_MAX  = 255.0f;
		static const float VELOCITY_DFL  = 128.0f;
		static const float VELOCITY_STEP = 1.0f;

		static const float CLAMP_MIN     = 0.0f;
		static const float CLAMP_MAX     = 255.0f;
		static const float CLAMP_DFL     = 128.0f;
		static const float CLAMP_STEP    = 1.0f;

		static const float AMP_MIN       = -255.0f;
		static const float AMP_MAX       = +255.0f;
		static const float AMP_DFL       = 0.0f;
		static const float AMP_STEP      = 1.0f;
	};

	struct midi_edit_metadata
	{
		static const size_t MIDI_PROGRAM_MIN = 1;
		static const size_t MIDI_PROGRAM_MAX = 128;

		static const size_t MIDI_VELOCITY_MIN = 0;
		static const size_t MIDI_VELOCITY_MAX = 255;

    	static const plugin_metadata_t metadata;

		enum ports
		{
			// Input MIDI
			IN,
			// Output MIDI
			OUT,

			// Input Controls:
			CH01_PROG, CH01_PROG_BYPASS, CH01_VEL, CH01_VEL_BYPASS, CH01_CLAMP, CH01_CLAMP_BYPASS, CH01_AMP, CH01_AMP_BEFORE,
			CH02_PROG, CH02_PROG_BYPASS, CH02_VEL, CH02_VEL_BYPASS, CH02_CLAMP, CH02_CLAMP_BYPASS, CH02_AMP, CH02_AMP_BEFORE,
			CH03_PROG, CH03_PROG_BYPASS, CH03_VEL, CH03_VEL_BYPASS, CH03_CLAMP, CH03_CLAMP_BYPASS, CH03_AMP, CH03_AMP_BEFORE,
			CH04_PROG, CH04_PROG_BYPASS, CH04_VEL, CH04_VEL_BYPASS, CH04_CLAMP, CH04_CLAMP_BYPASS, CH04_AMP, CH04_AMP_BEFORE,
			CH05_PROG, CH05_PROG_BYPASS, CH05_VEL, CH05_VEL_BYPASS, CH05_CLAMP, CH05_CLAMP_BYPASS, CH05_AMP, CH05_AMP_BEFORE,
			CH06_PROG, CH06_PROG_BYPASS, CH06_VEL, CH06_VEL_BYPASS, CH06_CLAMP, CH06_CLAMP_BYPASS, CH06_AMP, CH06_AMP_BEFORE,
			CH07_PROG, CH07_PROG_BYPASS, CH07_VEL, CH07_VEL_BYPASS, CH07_CLAMP, CH07_CLAMP_BYPASS, CH07_AMP, CH07_AMP_BEFORE,
			CH08_PROG, CH08_PROG_BYPASS, CH08_VEL, CH08_VEL_BYPASS, CH08_CLAMP, CH08_CLAMP_BYPASS, CH08_AMP, CH08_AMP_BEFORE,
			CH09_PROG, CH09_PROG_BYPASS, CH09_VEL, CH09_VEL_BYPASS, CH09_CLAMP, CH09_CLAMP_BYPASS, CH09_AMP, CH09_AMP_BEFORE,
			CH10_PROG, CH10_PROG_BYPASS, CH10_VEL, CH10_VEL_BYPASS, CH10_CLAMP, CH10_CLAMP_BYPASS, CH10_AMP, CH10_AMP_BEFORE,
			CH11_PROG, CH11_PROG_BYPASS, CH11_VEL, CH11_VEL_BYPASS, CH11_CLAMP, CH11_CLAMP_BYPASS, CH11_AMP, CH11_AMP_BEFORE,
			CH12_PROG, CH12_PROG_BYPASS, CH12_VEL, CH12_VEL_BYPASS, CH12_CLAMP, CH12_CLAMP_BYPASS, CH12_AMP, CH12_AMP_BEFORE,
			CH13_PROG, CH13_PROG_BYPASS, CH13_VEL, CH13_VEL_BYPASS, CH13_CLAMP, CH13_CLAMP_BYPASS, CH13_AMP, CH13_AMP_BEFORE,
			CH14_PROG, CH14_PROG_BYPASS, CH14_VEL, CH14_VEL_BYPASS, CH14_CLAMP, CH14_CLAMP_BYPASS, CH14_AMP, CH14_AMP_BEFORE,
			CH15_PROG, CH15_PROG_BYPASS, CH15_VEL, CH15_VEL_BYPASS, CH15_CLAMP, CH15_CLAMP_BYPASS, CH15_AMP, CH15_AMP_BEFORE,
			CH16_PROG, CH16_PROG_BYPASS, CH16_VEL, CH16_VEL_BYPASS, CH16_CLAMP, CH16_CLAMP_BYPASS, CH16_AMP, CH16_AMP_BEFORE

		};
	};
}
#endif /* METADATA_MIDI_EDIT_H_ */
